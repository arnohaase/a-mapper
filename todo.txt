todo
----
* cross cutting
  * QualifiedSourceAndTargetTypes
  * generic CompositeCanHandle[T <: CanHandle]?
  * log exception including path in worker --> configurable: log and maintain old exception, wrap, ...

* tests
  * deProxyStrategy

* thoughts
  * mapping defs: annotation based 'canHandle' via mix-in trait (?!?!?!)
  * ValueMappingDef: add path --> may itself contain object mappings?
  * separate 'create' and 'merge' modes?

* features
  * for java beans / first shot
    * "preprocessor"
      * "deProxy"
      * "enhance" (--> inject something)
      * "guard" (--> don't map uninitialized Hibernate proxies)
      * source vs. target side
    * "enhancer" (--> merge with "deProxy"?)
    * "special" mapped field
    * guards / conditional mapping
    * 'global' guard (--> 'don't map un-initialized Hibernate proxies') --> per call to 'map'
  * parsing
    * janino
    * (configurable) chain of possible parsers for attribute expressions: field, method, method path, janino, janino from dot-separated, OGNL, ...
    * flag 'exception free' in object (and value) mappings --> possible optimization: skip path enhancement (or rather 'inlineable'? --> context, special mapping, ...)
  * collections
    * several implementations for collection mapping (by equivalence, by least "distance", ...); adapter for JAPI / JavaBeans (--> modularize that)
    * java.util.Map
    * java.util.List --> Levenshtein
    * java.util.List --> "bag"
    * arrays
  * map, diff, simulate, merge
  * streaming output
  * streaming input (?)
  * transforming case classes / immutable structures
  * separate 'transformation' step between source and target access?

* admin
  * upload to maven central

* ?!?!?
  * special kind of 'mapping def' for multi-valued / indexed properties

* documentation
  * Java Bean mapping: sourceCls == targetClass --> only 'forward' mapping is registered
  * examples for qualifiers
    * 'list' mapping strategy
    * number of decimals for 'double to BigDecimal' mapping
    * date format for Date -> String
    * i18n for String -> String
  * qualifier for collection elements: same qualifier as for the collection
  * examples for context
    * currency / price
  * context: only source side because ...?!


